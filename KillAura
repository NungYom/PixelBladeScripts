-- Gui Script สำหรับ Roblox พร้อมปุ่มควบคุมและฟังก์ชัน

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- GUI Container
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "FarmGui"
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.DisplayOrder = 1000
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Parent = game:GetService("CoreGui") or PlayerGui

-- Utility Function
local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = text
    button.Parent = ScreenGui
    button.Font = Enum.Font.SourceSans
    button.TextSize = 18
    button.AutoButtonColor = true
    button.Visible = true
    return button
end

local function createSlider(name, position, defaultValue, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 140, 0, 40)
    frame.Position = position
    frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    frame.Parent = ScreenGui

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0.5, 0)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 16
    label.Text = name .. ": " .. defaultValue
    label.Parent = frame

    local slider = Instance.new("TextButton")
    slider.Size = UDim2.new(1, 0, 0.5, 0)
    slider.Position = UDim2.new(0, 0, 0.5, 0)
    slider.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    slider.Text = "Change"
    slider.TextColor3 = Color3.fromRGB(255, 255, 255)
    slider.Font = Enum.Font.SourceSans
    slider.TextSize = 14
    slider.Parent = frame

    local value = defaultValue
    slider.MouseButton1Click:Connect(function()
        value = (value % 50) + 1
        label.Text = name .. ": " .. value
        callback(value)
    end)
end

-- Variables
local oneTEnabled = false
local autoFarmCaveEnabled = false
local sandDuration = 3
local waterDuration = 20

-- 1T Toggle
local oneTBtn = createButton("1T : OFF", UDim2.new(0, 10, 0, 10))
oneTBtn.MouseButton1Click:Connect(function()
    oneTEnabled = not oneTEnabled
    oneTBtn.Text = oneTEnabled and "1T : ON" or "1T : OFF"
    oneTBtn.BackgroundColor3 = oneTEnabled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(170, 0, 0)
end)

-- Auto Farm Cave Button
local caveBtn = createButton("Auto Farm Cave", UDim2.new(0, 10, 0, 50))
caveBtn.MouseButton1Click:Connect(function()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local root = character:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(-247, -41, 620)
    end
end)

-- Sell Button
local sellBtn = createButton("Sell", UDim2.new(0, 10, 0, 90))
sellBtn.MouseButton1Click:Connect(function()
    local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local root = character:FindFirstChild("HumanoidRootPart")
    if not root then return end

    local originalCFrame = root.CFrame
    local targetPosition = Vector3.new(-270, 36, 99)
    local reachedTarget = false
    local arrivedAtTargetTime

    spawn(function()
        while not reachedTarget do
            root.CFrame = CFrame.new(targetPosition)
            if (root.Position - targetPosition).Magnitude < 3 then
                if not arrivedAtTargetTime then
                    arrivedAtTargetTime = tick()
                elseif tick() - arrivedAtTargetTime >= 1 then
                    reachedTarget = true
                    ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Shop"):WaitForChild("SellAll"):InvokeServer()
                    task.wait(0.1)
                    local backReached = false
                    local returnTime
                    while not backReached do
                        root.CFrame = originalCFrame
                        if (root.Position - originalCFrame.Position).Magnitude < 3 then
                            if not returnTime then
                                returnTime = tick()
                            elseif tick() - returnTime >= 1 then
                                backReached = true
                            end
                        else
                            returnTime = nil
                        end
                        task.wait(0.05)
                    end
                end
            else
                arrivedAtTargetTime = nil
            end
            task.wait(0.05)
        end
    end)
end)

-- Sliders
createSlider("Sand", UDim2.new(0, 150, 0, 10), sandDuration, function(v)
    sandDuration = v
end)

createSlider("Water", UDim2.new(0, 150, 0, 60), waterDuration, function(v)
    waterDuration = v
end)

-- Loop Task
spawn(function()
    while true do
        if oneTEnabled then
            local buffer = require(ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Shared"):WaitForChild("Buffer"))
            local args = {
                buffer.fromstring("\024"),
                buffer.fromstring("\254\001\000\006\015VortexContainer")
            }
            ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Shared"):WaitForChild("Warp")
                :WaitForChild("Index"):WaitForChild("Event"):WaitForChild("Reliable")
                :FireServer(unpack(args))
        end
        task.wait(1)
    end
end)
